#!/bin/bash

#enable parallel downloads and color in pacman
sed -i 's/#ParallelDownloads/ParallelDownloads/g' /etc/pacman.conf

sed -i 's/#Color/color/g' /etc/pacman.conf

#multilib
sed -i '92,93s/#//g' /etc/pacman.conf

#makepkg config, set arch and tune to native, set number of jobs to number of threads
processorCount=`nproc --all`
sed -i 's/-march=x86-64 -mtune=generic/-march=native -mtune=native/g' /etc/makepkg.conf
sed -i 's/#MAKEFLAGS=/MAKEFLAGS=/g' /etc/makepkg.conf
sed -i "s/-j./-j$processorCount/g" /etc/makepkg.conf


#Install kernel + key packages
pacman -Syu --noconfirm grub os-prober nano initramfs linux linux-headers reflector

#reflector
reflector --verbose --latest 10 --sort rate --save /etc/pacman.d/mirrorlist

#locale setup
echo "Select locale:"
read -p "Press enter to continue:"

#nano /etc/locale.gen
echo en_US.UTF-8 UTF-8 > /etc/locale.gen

localectl set-locale LANG=en_US.UTF-8
export LANG=en_US.UTF-8
locale-gen
locale -a

echo "Select your timezone:"
tzselect | read timeZone
ln -sf $timeZone /etc/localtime
hwclock --systohc --utc

clear

#swap file
echo "Would you like a swap file? (yes, no)"
read swapAnswer
if[ "$swapAnswer" == "yes" ]
then
      echo "What size swap file would you like in MiB?"
      read swapSize
      dd if=/dev/zero of=/swapfile bs=1M count=$swapSize status=progress
      chmod 600 /swapfile
      mkswap /swapfile
      swapon /swapfile
      echo "# /swapfile" >> /etc/fstab
      echo "/swapfile none swap defaults,lazytime 0 0" >> /etc/fstab
      
else
      break

#User setup
echo "What should the hostname be?"
read hostName
echo "$hostName" >> /etc/hostname
echo "127.0.1.1 localhost.localdomain $hostName" >> /etc/hosts

clear

echo "Create password for root:"
passwd

clear

echo "What should the user name be?"
read userName
useradd -m -g users -G wheel,storage,power -s /bin/bash $userName

clear

echo "Create password for $userName:"
passwd $userName
#Allow all users to use sudo if they know the password
echo "ALL ALL=(ALL) ALL" >> /etc/sudoers

#bootloader-gen
os-prober
##reorder autodetect and block hooks for universal hardware booting
sed -i 's/autodetect modconf block/block autodetect modconf/g' /etc/mkinitcpio.conf
mkinitcpio -p linux

UEFI="null"
while :
do
      echo "Is this a UEFI system? (yes, no)"
      read UEFI
      if [ "$UEFI" == "yes" ]
      then
            pacman -S --noconfirm efibootmgr
            #/boot/efi already made
            grub-install --target=x86_64-efi --bootloader-id=GRUB --efi-directory=/boot/efi
            break
      elif [ "$UEFI" == "no" ]
      then
            echo "Where should grub be installed? (sda, sdb)"
            read iGrub
            grub-install --target=i386-pc --recheck /dev/$iGrub
            break
      fi
done

echo -e "\n\nGRUB_DEFAULT=saved" >> /etc/default/grub
echo "GRUB_SAVEDEFAULT=true" >> /etc/default/grub
echo "GRUB_FORCE_HIDDEN_MENU=TRUE" >> /etc/default/grub

grub-mkconfig -o /boot/grub/grub.cfg

if [ "$UEFI" == "yes" ]
then
      mkdir /boot/efi/EFI/BOOT
      cp /boot/efi/EFI/GRUB/grubx64.efi /boot/efi/EFI/BOOT/BOOTX64.EFI
      echo "bcf boot add 1 fs0:\EFI\GRUB\grubx64.efi \"Arch GRUB bootloader\"\nexit" >> /boot/efi/startup.nsh
fi

clear

#aur helper
echo "Installing yay:"
echo EDITOR="/usr/bin/nano" >> /etc/environment

chown -hR $userName /home/$userName

cd /home/$userName
curl -O https://aur.archlinux.org/cgit/aur.git/snapshot/yay.tar.gz
tar -xvzf yay.tar.gz
cd /home/$userName/yay

chown -hR $userName /home/$userName

sudo -u $userName makepkg -csri --skippgpcheck

clear

#intel ucode
echo "Install if using an Intel processor:"
pacman -S intel-ucode

clear

echo "Which desktop environment would you like to use? (plasma, gnome3, xfce, or none)"
read deWM
case $deWM in
      plasma)
           pacman -S --noconfirm plasma-meta plasma-nm spectacle konsole gwenview dolphin partitionmanager kate ark knotes
           systemctl enable sddm.service ;;
      gnome3)
           pacman -S --noconfirm gnome gparted gedit file-roller
           systemctl enable gdm.service ;;
      xfce)
           pacman -S --noconfirm xfce4 xfce4-goodies gparted file-roller deluge sddm network-manager-applet gvfs pavucontrol
           systemctl enable sddm.service ;;
      none)
           ;;
esac

#default packages
pacman -Syu --noconfirm networkmanager bash-completion wpa_supplicant xorg-xinit xf86-video-vesa xorg-apps xorg firefox alsa-utils pulseaudio pulseaudio-bluetooth pulseaudio-alsa p7zip htop wine-staging winetricks libreoffice-fresh mpv adwaita-icon-theme links ntfs-3g deluge code noto-fonts noto-fonts-emoji noto-fonts-cjk noto-fonts-extra 

clear
#anbox may need some fuckery to get yay to cooperate due to not being $userName
echo "Install if you wish to have android app support"
yay -Syu anbox-git anbox-image-gapps-rooted


sysctl -w net.ipv4.ip_default_ttl=128
systemctl enable NetworkManager
systemctl enable wpa_supplicant
systemctl enable bluetooth.service

rm -rf /ainstall /aconfig /home/$userName/yay*

clear

echo "Install Nvidia GPU drivers with package nvidia (400+), nvidia-340xx (8000-300), or nvidia-304xx (6000-7000)"
echo "You'll also probably want nvidia-settings and lib32-nvidia-utils for configuration and games."
echo "You may need to modprobe your wifi driver to get it running at first."
echo "Reboot when ready."
